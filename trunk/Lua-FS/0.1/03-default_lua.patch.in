--- lua-fs-0.1_orig/default.lua	2005-11-07 04:30:32.000000000 +0100
+++ lua-fs-0.1/default.lua	2007-04-14 09:35:58.000000000 +0200
@@ -1,30 +1,18 @@
-if not _REQUIREDNAME then
-        error('Don\'t load directly, use require "libfs"', 2)
-      end
-      
-      -- Get libname.
-      local libname  = os.getenv "LUA_SOPATH"
-      if libname then
-        if not string.find(libname, '/$') then
-          libname = libname .. "/"
-        end
-      else
-        libname = "/usr/lib/lua/5.0/"
-      end
-      libname = libname .. _REQUIREDNAME .. ".so"
+-- @%Compile_luamodule%@.lua
+-- support code for @%Compile_luamodule%@ library
+-- usage lua -l@%Compile_luamodule%@ ...
 
-      
-      local funcname = "luaopen_" .. _REQUIREDNAME
-      
-      local f, err = loadlib(libname, funcname)
-      if not f then
-        error("loadlib('" .. libname .. "', '" .. funcname .. "') failed: " .. err, 2)
-      end
-      
-      local function ret(s, ...)
-        if s then
-          return unpack(arg)
-        end
-        error(_REQUIREDNAME .. "'s " .. funcname .. " failed: " .. arg[1], 3)
-      end
-      return ret(pcall(f))
+local SOPATH="@%Compile_target%@/lib/lua/@%Compile_luaversion%@/@%Compile_luamodule%@.so"
+local OPENFUNC="luaopen_@%Compile_luamodule%@"
+
+local function so(x)
+	local version=string.sub(_VERSION,5,5)..string.sub(_VERSION,7,7)
+	local loadlib
+	if version >= "51" then
+		loadlib=package.loadlib
+	end
+	return assert(loadlib(SOPATH,OPENFUNC))()
+end
+
+so()
+module("@%Compile_luamodule%@")
